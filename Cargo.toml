[package]
name = "bevy_streaming"
version = "0.1.0"
edition = "2024"
resolver = "2"

[lib]
name = "bevy_streaming"
crate-type = ["lib"]
path = "src/lib.rs"

[[example]]
name = "simple"
required-features = ["pixelstreaming"]

[dependencies]
bevy_app = { version = "0.15", path = "../bevy/crates/bevy_app" }
bevy_ecs = { version = "0.15", path = "../bevy/crates/bevy_ecs" }
bevy_render = { version = "0.15", path = "../bevy/crates/bevy_render" }
bevy_asset = { version = "0.15", path = "../bevy/crates/bevy_asset" }
bevy_image = { version = "0.15", path = "../bevy/crates/bevy_image" }
bevy_log = { version = "0.15", path = "../bevy/crates/bevy_log" }
bevy_input = { version = "0.15", path = "../bevy/crates/bevy_input" }
bevy_picking = { version = "0.15", path = "../bevy/crates/bevy_picking" }
bevy_math = { version = "0.15", path = "../bevy/crates/bevy_math" }
bevy_window = { version = "0.15", path = "../bevy/crates/bevy_window" }
bevy_utils = { version = "0.15", path = "../bevy/crates/bevy_utils" }
bevy_derive = { version = "0.15", path = "../bevy/crates/bevy_derive" }
wgpu = { version = "23.0.1", default-features = false, path = "../wgpu/wgpu" }
wgpu-hal = { version = "23.0.1", default-features = false, path = "../wgpu/wgpu-hal" }
wgpu-types = { version = "23", default-features = false, path = "../wgpu/wgpu-types" }
ash = "0.38.0"
# bevy_capture = "0.2"
crossbeam-channel = "0.5"

## GSTREAMER
glib = { package = "glib", version = "0.20.0" }
gst = { package = "gstreamer", version = "0.23" }
gst-app = { package = "gstreamer-app", version = "0.23" }
gst-base = { package = "gstreamer-base", version = "0.23" }
gst-video = { package = "gstreamer-video", version = "0.23" }
gst-sdp = { package = "gstreamer-sdp", version = "0.23" }
gst-rtp = { package = "gstreamer-rtp", version = "0.23" }
gst-webrtc = { package = "gstreamer-webrtc", version = "0.23" }
gst-utils = { package = "gstreamer-utils", version = "0.23" }
gst-gl = { package = "gstreamer-gl", version = "0.23", features = ["v1_24"] }
gst-allocators = { package = "gstreamer-allocators", version = "0.23" }
gst-plugin-webrtc = "0.13.3"
gst-plugin-rtp = "0.13.3"
anyhow = "1"
derive_more = { version = "1", features = ["display", "error"] }

# DRM formats
drm-fourcc = "2.2.0"

tokio = { version = "1", features = [
    "fs",
    "macros",
    "rt-multi-thread",
    "time",
], optional = true }
tokio-native-tls = { version = "0.3.0", optional = true }
tokio-stream = { version = "0.1.11", optional = true }
serde = { version = "1", features = ["derive"], optional = true }
serde_json = { version = "1", optional = true }
futures = { version = "0.3", optional = true }
async-tungstenite = { version = "0.29", optional = true, features = [
    "tokio-runtime",
    "tokio-native-tls",
    "url",
] }
url = { version = "2", optional = true }
byteorder = { version = "1.5.0", optional = true }

[dev-dependencies]
bevy = { version = "0.15", path = "../bevy" }

[features]
default = ["pixelstreaming"]
pixelstreaming = [
    "dep:url",
    "dep:async-tungstenite",
    "dep:serde",
    "dep:futures",
    "dep:serde_json",
    "dep:tokio",
    "dep:tokio-native-tls",
    "dep:tokio-stream",
    "dep:byteorder",
]

# Enable a small amount of optimization in the dev profile.
[profile.dev]
opt-level = 1

# Enable a large amount of optimization in the dev profile for dependencies.
[profile.dev.package."*"]
opt-level = 3


# Enable more optimization in the release profile at the cost of compile time.
[profile.release]
# Compile the entire crate as one unit.
# Slows compile times, marginal improvements.
codegen-units = 1
# Do a second optimization pass over the entire program, including dependencies.
# Slows compile times, marginal improvements.
lto = "thin"

# Optimize for size in the wasm-release profile to reduce load times and bandwidth usage on web.
[profile.wasm-release]
# Default to release profile values.
inherits = "release"
# Optimize with size in mind (also try "z", sometimes it is better).
# Slightly slows compile times, great improvements to file size and runtime performance.
opt-level = "s"
# Strip all debugging information from the binary to slightly reduce file size.
strip = "debuginfo"
